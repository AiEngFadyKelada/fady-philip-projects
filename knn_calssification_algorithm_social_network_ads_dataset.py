# -*- coding: utf-8 -*-
"""KNN calssification algorithm-Social Network Ads dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zvnzLKHAyAqN6WgdcmQqr9SS7jQTupzu
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report
# %matplotlib notebook

dataset=pd.read_csv('Social_Network_Ads.csv')
dataset

dataset.info()

dataset.describe()

dataset.isnull().sum()

dataset['Purchased'].unique()

dataset.columns

df=dataset[['Gender', 'Age', 'EstimatedSalary', 'Purchased']]

X=df[['Gender', 'Age', 'EstimatedSalary']]
y=df['Purchased']

X

y

categorical_cols=['Gender']
numerical_cols=['Age', 'EstimatedSalary']

encoder=OneHotEncoder(sparse=False,handle_unknown='ignore')
encoder.fit(X[categorical_cols])

encoded_cols = list(encoder.get_feature_names_out(categorical_cols))
encoded_cols

df[encoded_cols] = encoder.transform(df[categorical_cols].fillna('unknown'))

df.drop('Gender',axis=1,inplace=True)

y=df['Purchased']
X=df.drop('Purchased',axis=1)

scaler=MinMaxScaler()
X[numerical_cols]=scaler.fit_transform(X[numerical_cols])

X

y

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)
Knn=KNeighborsClassifier(n_neighbors=5)
Knn.fit(X_train,y_train)

y_train_pred=Knn.predict(X_train)

Knn.fit(X_test,y_test)
y_test_pred=Knn.predict(X_test)

print(accuracy_score(y_train,y_train_pred))
print(accuracy_score(y_test,y_test_pred))
print(confusion_matrix(y_train,y_train_pred))
print(confusion_matrix(y_test,y_test_pred))
print(classification_report(y_train,y_train_pred))
print(classification_report(y_test,y_test_pred))

Age=int(input('Enter Age: '))
EstimatedSalary=int(input('Enter EstimatedSalary: '))
Gender=str(input('Enter Gender (please type " Female "  or  " Male "): '))
new_input = { 'Age': Age, 'EstimatedSalary': EstimatedSalary,'Gender':Gender}
new_data = pd.DataFrame([new_input])
numeric_cols=['Age', 'EstimatedSalary']
categorical_cols=['Gender']
new_data[numeric_cols] = scaler.transform(new_data[numeric_cols])
new_data[encoded_cols] = encoder.transform(new_data[categorical_cols])
new_data=new_data[numeric_cols+encoded_cols]
prediction = Knn.predict(new_data)[0]
if(prediction==0):
    print('Not Purchased')
else:
    print('Purchased')

