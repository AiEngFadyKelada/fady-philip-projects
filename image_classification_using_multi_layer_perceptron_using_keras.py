# -*- coding: utf-8 -*-
"""Image Classification Using Multi Layer Perceptron using Keras.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S6DLo7jR8a1MRpqrO9duiM2Tp6oB677s

# Image Classification Using Multi Layer Perceptron
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import tensorflow as tf
import keras
import cv2
import os

room_types=os.listdir('dataset')
room_types.remove('.ipynb_checkpoints')
print(room_types)
print(len(room_types))

rooms=[]
for item in room_types:
  all_rooms=os.listdir('dataset/'+item)
  print(all_rooms[:])
  print(len(all_rooms))
  filenames=[j for j in os.listdir('dataset/'+item) if j.endswith('.jpg')]
  print(filenames)
  for f in filenames:
    rooms.append((item,str('dataset' +'/'+item) + '/' +f))
rooms

print(rooms)
print(len(rooms))

rooms_df=pd.DataFrame(data=rooms,columns=['room type','image'])
print(rooms_df.head)
print(len(rooms))

rooms_df=pd.DataFrame(data=rooms,columns=['room type','image'])
print(rooms_df.head)
print(len(rooms))

room_count=rooms_df['room type'].value_counts()
print("rooms in each category:")
print(room_count)

path='dataset//'
im_size=300
images=[]
labels=[]
for i in room_types:
  data_path=path+str(i)
  filenames=[i for i in os.listdir(data_path) if i.endswith('.jpg')]
  for f in filenames:
    img=cv2.imread(data_path+'/'+f)
    img=cv2.resize(img,(im_size,im_size))
    images.append(img)
    labels.append(i)

images

labels

images=np.array(images)
images.shape

from sklearn.preprocessing import LabelEncoder,OneHotEncoder
le=LabelEncoder()
labels=le.fit_transform(labels)
labels



y=labels.reshape(-1,1)
onehotencoder = OneHotEncoder()
Y= onehotencoder.fit_transform(y)
y=Y.toarray()
print(y)

from sklearn.utils import shuffle
from sklearn.model_selection import train_test_split
images,y=shuffle(images,y,random_state=1)
X_train,X_test,y_train,y_test=train_test_split(images,y,test_size=0.05,random_state=415)

model=keras.Sequential([
    keras.layers.Flatten(input_shape=(300,300,3)),
    keras.layers.Dense(256,activation='tanh'),
    keras.layers.Dense(3,activation='softmax')
  ])

model.compile(optimizer=tf.keras.optimizers.Adam(),
              loss='categorical_crossentropy',
              metrics=['accuracy'])
model.fit(X_train,y_train,epochs=5)

y_pred=model.predict(X_test)
y_pred

from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array
from keras.models import load_model
image=load_img('dataset/dinning room/din_100.jpg',target_size=(300,300))
image

image=np.array(image)
image.shape

image=img_to_array(image)
image=image.reshape((1,image.shape[0],image.shape[1],image.shape[2]))

yhat=model.predict(image)
yhat

